# our base build image
FROM sgtwilko/rpi-raspbian-opencv:latest
RUN  cd /tmp \
	&& wget -c -N -nv -O opencv.zip https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip \
	&& unzip opencv.zip \
	&& wget -c -N -nv -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip \
	&& unzip opencv_contrib.zip \
	&& cd /tmp/opencv-$OPENCV_VERSION \
	&& mkdir build \
	&& cd build \
	&& cmake -D CMAKE_BUILD_TYPE=RELEASE \
                -D OPENCV_GENERATE_PKGCONFIG=YES \
		-D CMAKE_INSTALL_PREFIX=/usr/local \
		-D INSTALL_C_EXAMPLES=ON \
		-D BUILD_PYTHON_SUPPORT=ON \
		-D BUILD_NEW_PYTHON_SUPPORT=ON \
		-D INSTALL_PYTHON_EXAMPLES=ON \
		-D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-$OPENCV_VERSION/modules \
		-D BUILD_EXAMPLES=ON .. \
	&& make -j4  \
	&& make \
	&& make install \
	&& make clean \
	&& cd / 
    
RUN mkdir /open-cv-build
RUN mv /tmp/opencv-$OPENCV_VERSION/build /open-cv-build/

################
# yolo darknet #
################
WORKDIR /
RUN apt-get update && apt-get install -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy  libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev wget unzip
RUN git clone https://github.com/AlexeyAB/darknet.git
WORKDIR darknet
RUN sed -i 's/OPENCV=0/OPENCV=1/;s/LIBSO=0/LIBSO=1/' Makefile
RUN ln -sf /usr/local/lib/pkgconfig/opencv4.pc /usr/local/lib/pkgconfig/opencv.pc
RUN make

RUN sed -i 's/from queue/from multiprocessing/g' darknet_video.py
RUN wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights

COPY requirements.txt .
RUN pip install -r requirements.txt
RUN pip install paho-mqtt

COPY opencv_yolo/darknet_video.py .
COPY opencv_yolo/customDarknet.py .
COPY yolov3-models yolov3-models
COPY docker-entrypoint.sh .

ENTRYPOINT ["./docker-entrypoint.sh"]
CMD []

